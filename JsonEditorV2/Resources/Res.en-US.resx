<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="JE_ABOUT_CONTACT_US" xml:space="preserve">
    <value>Bug Report: KentoHize@arinaorganization.org</value>
  </data>
  <data name="JE_ABOUT_MESSAGE" xml:space="preserve">
    <value>JSON Files Editor</value>
  </data>
  <data name="JE_ABOUT_MESSAGE_2" xml:space="preserve">
    <value>Author: KentoHize(日瀨健人)</value>
  </data>
  <data name="JE_ABOUT_TITLE" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="JE_BTN_CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="JE_BTN_CLEAR_COLUMN" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="JE_BTN_CLEAR_MAIN" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="JE_BTN_CONFIRM" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="JE_BTN_COPY" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="JE_BTN_COPY_LINE" xml:space="preserve">
    <value>Copy Line</value>
  </data>
  <data name="JE_BTN_DELETE" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="JE_BTN_DELETE_LINE" xml:space="preserve">
    <value>Delete Line</value>
  </data>
  <data name="JE_BTN_EDIT_CHOICES" xml:space="preserve">
    <value>Edit Choices</value>
  </data>
  <data name="JE_BTN_FIND_LINE" xml:space="preserve">
    <value>Find Line</value>
  </data>
  <data name="JE_BTN_LINE_MOVE_DOWN" xml:space="preserve">
    <value>Line Move Down</value>
  </data>
  <data name="JE_BTN_LINE_MOVE_UP" xml:space="preserve">
    <value>Line Move Up</value>
  </data>
  <data name="JE_BTN_NEW_GUID" xml:space="preserve">
    <value>New ID</value>
  </data>
  <data name="JE_BTN_NEW_LINE" xml:space="preserve">
    <value>New Line</value>
  </data>
  <data name="JE_BTN_NEW_SORT_INFO" xml:space="preserve">
    <value>New Sort Rule</value>
  </data>
  <data name="JE_BTN_REGENERATE_KEY" xml:space="preserve">
    <value>Reset Key</value>
  </data>
  <data name="JE_BTN_RESET_VALUE" xml:space="preserve">
    <value>Reset Value</value>
  </data>
  <data name="JE_BTN_UPDATE_COLUMN" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="JE_BTN_UPDATE_MAIN" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="JE_CHOICES_ADD_ITEM" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="JE_CHOICES_CONFIRM" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="JE_CHOICES_DELETE_ITEM" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="JE_CHOICE_DUPLICATE_ITEM" xml:space="preserve">
    <value>Value "{0}" exists.</value>
  </data>
  <data name="JE_COB_CHECK_METHOD" xml:space="preserve">
    <value>Files Check Method</value>
  </data>
  <data name="JE_COB_CHECK_METHOD_FULL_CHECK" xml:space="preserve">
    <value>Full Check</value>
  </data>
  <data name="JE_COB_CHECK_METHOD_NO_CHECK" xml:space="preserve">
    <value>No Check</value>
  </data>
  <data name="JE_COB_CHECK_METHOD_ONE_INVALID_CHECK" xml:space="preserve">
    <value>One Invalid</value>
  </data>
  <data name="JE_COB_SORT_ASCENDING" xml:space="preserve">
    <value>Ascending</value>
  </data>
  <data name="JE_COB_SORT_DESCENDING" xml:space="preserve">
    <value>Descending</value>
  </data>
  <data name="JE_COLUMN_AUTO_GENERATE_KEY" xml:space="preserve">
    <value>Auto Generate Key</value>
  </data>
  <data name="JE_COLUMN_CHOICES" xml:space="preserve">
    <value>Choice Values</value>
  </data>
  <data name="JE_COLUMN_DESCRIPTION" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="JE_COLUMN_DISPLAY" xml:space="preserve">
    <value>Show on List</value>
  </data>
  <data name="JE_COLUMN_FK_COLUMN" xml:space="preserve">
    <value>FK Column</value>
  </data>
  <data name="JE_COLUMN_FK_TABLE" xml:space="preserve">
    <value>FK File</value>
  </data>
  <data name="JE_COLUMN_DEFAULT_VALUE" xml:space="preserve">
    <value>Default Value</value>
  </data>
  <data name="JE_COLUMN_IS_KEY" xml:space="preserve">
    <value>Is Key</value>
  </data>
  <data name="JE_COLUMN_IS_NULLABLE" xml:space="preserve">
    <value>Is Nullable</value>
  </data>
  <data name="JE_COLUMN_IS_UNIQUE" xml:space="preserve">
    <value>Unique Column</value>
  </data>
  <data name="JE_COLUMN_MAX_LENGTH" xml:space="preserve">
    <value>Maximum Length</value>
  </data>
  <data name="JE_COLUMN_MAX_VALUE" xml:space="preserve">
    <value>Max Value</value>
  </data>
  <data name="JE_COLUMN_MIN_VALUE" xml:space="preserve">
    <value>Min Value</value>
  </data>
  <data name="JE_COLUMN_NAME" xml:space="preserve">
    <value>Column Name</value>
  </data>
  <data name="JE_COLUMN_NUM_OF_ROWS" xml:space="preserve">
    <value>Number of Rows</value>
  </data>
  <data name="JE_COLUMN_REGEX" xml:space="preserve">
    <value>Regular Expression</value>
  </data>
  <data name="JE_COLUMN_TYPE" xml:space="preserve">
    <value>Column Type</value>
  </data>
  <data name="JE_DATETIME_DAY" xml:space="preserve">
    <value>Day(s)</value>
  </data>
  <data name="JE_DATETIME_HOUR" xml:space="preserve">
    <value>Hour(s)</value>
  </data>
  <data name="JE_DATETIME_MINUTE" xml:space="preserve">
    <value>Mintue(s)</value>
  </data>
  <data name="JE_DATETIME_MONTH" xml:space="preserve">
    <value>Month(s)</value>
  </data>
  <data name="JE_DATETIME_OK" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="JE_DATETIME_SECOND" xml:space="preserve">
    <value>Second(s)</value>
  </data>
  <data name="JE_DATETIME_YEAR" xml:space="preserve">
    <value>Year(s)</value>
  </data>
  <data name="JE_DIALOG_ALL_FILES" xml:space="preserve">
    <value>All Files(*.*)</value>
  </data>
  <data name="JE_DIALOG_CSV_FILE_FULL_NAME" xml:space="preserve">
    <value>Comma-Separated Values File(*.csv)</value>
  </data>
  <data name="JE_DIALOG_CS_FILE_FULL_NAME" xml:space="preserve">
    <value>C# File(*.cs)</value>
  </data>
  <data name="JE_DIALOG_XML_FILE_FULL_NAME" xml:space="preserve">
    <value>Extensible Markup Language File(*.xml)</value>
  </data>
  <data name="JE_ERR_CHILD_COLUMN_COUNT_VARY" xml:space="preserve">
    <value>Invalid Json data file "{0}.json": Index {1}, column count not match.</value>
  </data>
  <data name="JE_ERR_CHILD_COLUMN_NAME_VARY" xml:space="preserve">
    <value>Invalid Json data file "{0}.json": Index {1}, column name "{2}" not match.</value>
  </data>
  <data name="JE_ERR_CHILD_COLUMN_ORDER_VARY" xml:space="preserve">
    <value>Invalid Json data file "{0}.json": Index {1}, column "{2}" order is wrong.</value>
  </data>
  <data name="JE_ERR_CHILD_COLUMN_TYPE_VARY" xml:space="preserve">
    <value>Invalid Json data file "{0}.json": Index {1}, column "{2}" type too many.</value>
  </data>
  <data name="JE_ERR_CHILD_ELEMENT_NOT_OBJECT" xml:space="preserve">
    <value>Invalid Json data file "{0}.json": Index {1}, child element is not an object.</value>
  </data>
  <data name="JE_ERR_DEFAULT_MESSAGE" xml:space="preserve">
    <value>Error occured: {0}</value>
  </data>
  <data name="JE_ERR_DEFAULT_TITLE" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="JE_ERR_EMPTY_FK_TABLE" xml:space="preserve">
    <value>"{0}" has no data.</value>
  </data>
  <data name="JE_ERR_JSONCONVERT_DESERIALIZE_JFI_FAILED_DEFAULT" xml:space="preserve">
    <value>JFI Files is not a valid Json file or format wrong: {0}</value>
  </data>
  <data name="JE_ERR_JSONCONVERT_DESERIALIZE_OBJECT_FAILED_DEFAULT" xml:space="preserve">
    <value>File "{0}.json" is not a valid json file: {1}.</value>
  </data>
  <data name="JE_ERR_LOAD_JFI_FILE_FAILED_DEFAULT" xml:space="preserve">
    <value>Load JFI File "{0}" failed, confirm the file exist and not damaged.</value>
  </data>
  <data name="JE_ERR_LOAD_JSON_FAILED_TITLE" xml:space="preserve">
    <value>Load File Failed</value>
  </data>
  <data name="JE_ERR_LOAD_JSON_FILE_FAILED_DEFAULT" xml:space="preserve">
    <value>Load file "{0}" failed, confirm the file exist and not damaged.</value>
  </data>
  <data name="JE_ERR_RECOVER_FILE_M_1" xml:space="preserve">
    <value>Backup file "{0}" found, confirm to recover the file to former folder "{1}"?</value>
  </data>
  <data name="JE_ERR_ROOT_ELEMENT_NOT_ARRAY" xml:space="preserve">
    <value>Invalid Json data file "{0}.json": Root element must be an array.</value>
  </data>
  <data name="JE_ERR_SAVE_CSV_FAILED" xml:space="preserve">
    <value>Export CSV file "{0}" failed, confirm file name has not been used in the target folder and the application has authorized to save files in the target folder.</value>
  </data>
  <data name="JE_ERR_SAVE_CS_FAILED" xml:space="preserve">
    <value>Export CS file "{0}" failed, confirm file name has not been used in the target folder and the application has authorized to save files in the target folder.</value>
  </data>
  <data name="JE_ERR_SAVE_LANG_FILES_FAILED" xml:space="preserve">
    <value>Export language files "{0}" failed, confirm the folder exist and the application has authorized to save files in the target folder.</value>
  </data>
  <data name="JE_ERR_SAVE_LANG_FILES_INVALID" xml:space="preserve">
    <value>File "{0}.json"' is not a valid file can export to language files. A valid file can export to language files must have an only string type key column.</value>
  </data>
  <data name="JE_ERR_SAVE_XML_FAILED" xml:space="preserve">
    <value>Export XML file "{0}" failed, confirm file name has not been used in the target folder and the application has authorized to save files in the target folder.</value>
  </data>
  <data name="JE_ERR_SCAN_CSV_FILE_FAILED_DEFAULT" xml:space="preserve">
    <value>Scan file "{0}.csv" failed, error message: "{1}"</value>
  </data>
  <data name="JE_ERR_SCAN_JSON_FAILED_TITLE" xml:space="preserve">
    <value>Scan File Failed</value>
  </data>
  <data name="JE_ERR_TABLE_CONVERT_TO_CSV_FAILED" xml:space="preserve">
    <value>File "{0}" convert to CSV File failed, information: "{1}".</value>
  </data>
  <data name="JE_ERR_TABLE_CONVERT_TO_XML_FAILED" xml:space="preserve">
    <value>File "{0}" convert to XML File failed, information: "{1}".</value>
  </data>
  <data name="JE_ERR_TABLE_INVALID_MESSAGE_PARTIAL" xml:space="preserve">
    <value>File "{0}.json" is not valid at line {1}, column "{2}", </value>
  </data>
  <data name="JE_ERR_TABLE_LOAD_JSON_FAILED_DEFAULT" xml:space="preserve">
    <value>File "{0}.json" data is not consistent with JFI File. Load failed.</value>
  </data>
  <data name="JE_ERR_UNKNOWN_ERROR" xml:space="preserve">
    <value>Unknown error.</value>
  </data>
  <data name="JE_INPUTBOX_BTN_CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="JE_INPUTBOX_BTN_CONFIRM" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="JE_INPUTBOX_DESCRIPTION" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="JE_INPUTBOX_DESCRIPTION_2" xml:space="preserve">
    <value>Column Name</value>
  </data>
  <data name="JE_INPUTBOX_DESCRIPTION_3" xml:space="preserve">
    <value>Folder's Title</value>
  </data>
  <data name="JE_INPUTBOX_FILE_EXISTS" xml:space="preserve">
    <value>File "{0}" exist.</value>
  </data>
  <data name="JE_INPUTBOX_TITLE" xml:space="preserve">
    <value>New Json File</value>
  </data>
  <data name="JE_INPUTBOX_TITLE_2" xml:space="preserve">
    <value>New Column</value>
  </data>
  <data name="JE_INPUTBOX_WRONG_COLUMN_NAME" xml:space="preserve">
    <value>Wrong column name, use a '_' or an alphabet at the head and  '_', alphabets or numbers at the body to complete a name, text length must less than 50.</value>
  </data>
  <data name="JE_INPUTBOX_WRONG_DATABASE_NAME" xml:space="preserve">
    <value>Wrong folder's title.</value>
  </data>
  <data name="JE_INPUTBOX_WRONG_FILE_NAME" xml:space="preserve">
    <value>Wrong file name.</value>
  </data>
  <data name="JE_LBL_CHOICE_NAME" xml:space="preserve">
    <value>Choice(s)</value>
  </data>
  <data name="JE_LIST_FK" xml:space="preserve">
    <value>FK</value>
  </data>
  <data name="JE_LIST_INVALID" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="JE_LIST_ITEMS" xml:space="preserve">
    <value>Line(s)</value>
  </data>
  <data name="JE_LIST_UNLOAD" xml:space="preserve">
    <value>Unload</value>
  </data>
  <data name="JE_RUN_ADD_COLUMN_M_1" xml:space="preserve">
    <value>Column"{0}" is exist.</value>
  </data>
  <data name="JE_RUN_COLUMN_MOVE_DOWN_M_1" xml:space="preserve">
    <value>Column"{0}" is a bottom column.</value>
  </data>
  <data name="JE_RUN_COLUMN_MOVE_TITLE" xml:space="preserve">
    <value>Move Column</value>
  </data>
  <data name="JE_RUN_COLUMN_MOVE_UP_M_1" xml:space="preserve">
    <value>Column"{0}" is a top column.</value>
  </data>
  <data name="JE_RUN_COPY_LINE_M_1" xml:space="preserve">
    <value>"{0}"New Line added, data copied from line {1}.</value>
  </data>
  <data name="JE_RUN_DELETE_COLUMN_M_1" xml:space="preserve">
    <value>This file has {0} line(s) of data, confirm to drop same column data synchronously?</value>
  </data>
  <data name="JE_RUN_DELETE_COLUMN_M_2" xml:space="preserve">
    <value>Column"{0}" deleted.</value>
  </data>
  <data name="JE_RUN_DELETE_JSON_FILE_M_1" xml:space="preserve">
    <value>Confirm to delete file "{0}.json"?(Deleted file can't recover after save.)</value>
  </data>
  <data name="JE_RUN_DELETE_JSON_FILE_M_5" xml:space="preserve">
    <value>File"{0}.json" deleted.</value>
  </data>
  <data name="JE_RUN_DELETE_LINE_M_1" xml:space="preserve">
    <value>"{0}" Line deleted.</value>
  </data>
  <data name="JE_RUN_EDIT_DATABASE_DESC_M_1" xml:space="preserve">
    <value>Description edited.</value>
  </data>
  <data name="JE_RUN_EXPORT_INVALID_FILE" xml:space="preserve">
    <value>Invalid data exist, continue export?</value>
  </data>
  <data name="JE_RUN_EXPORT_TO_CSHARP_CLASS_M_1" xml:space="preserve">
    <value>CS files have exported to "{0}".</value>
  </data>
  <data name="JE_RUN_EXPORT_TO_CSV_M_1" xml:space="preserve">
    <value>CSV files have exported to "{0}".</value>
  </data>
  <data name="JE_RUN_EXPORT_TO_LANG_FILES_M_1" xml:space="preserve">
    <value>Language files have exported to "{0}".</value>
  </data>
  <data name="JE_RUN_EXPORT_TO_XML_M_1" xml:space="preserve">
    <value>XML files have exported to "{0}".</value>
  </data>
  <data name="JE_RUN_FIND_NO_ITEM_FOUND" xml:space="preserve">
    <value>Column "{0}", value "{1}", data not found.</value>
  </data>
  <data name="JE_RUN_FIND_TITLE" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="JE_RUN_LINE_MOVE_DOWN_M_1" xml:space="preserve">
    <value>Data line "{0}" is a bottom line.</value>
  </data>
  <data name="JE_RUN_LINE_MOVE_TITLE" xml:space="preserve">
    <value>Move Line</value>
  </data>
  <data name="JE_RUN_LINE_MOVE_UP_M_1" xml:space="preserve">
    <value>Data line "{0}" is a top line.</value>
  </data>
  <data name="JE_RUN_LOAD_JSON_FILES_M_1" xml:space="preserve">
    <value>{0} File(s) has Loaded.</value>
  </data>
  <data name="JE_RUN_LOAD_JSON_FILES_M_2" xml:space="preserve">
    <value>JFI File not exist, scan folder to create files info.</value>
  </data>
  <data name="JE_RUN_LOAD_JSON_FILES_M_3" xml:space="preserve">
    <value>There is no Json file in the target folder "{0}".</value>
  </data>
  <data name="JE_RUN_LOAD_JSON_FILES_M_4" xml:space="preserve">
    <value>File "{0}.json"'s information didn't exists in the JFI File, confirm JFI File is correct.</value>
  </data>
  <data name="JE_RUN_LOAD_JSON_FILES_TITLE" xml:space="preserve">
    <value>Load Json Folder</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILES_M_1" xml:space="preserve">
    <value>New Json folder created at "{0}".</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILES_Q_1" xml:space="preserve">
    <value>There are {0} Json file(s) in the target folder, confirm to delete all files?</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILES_TITLE" xml:space="preserve">
    <value>New Json Folder</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILE_M_2" xml:space="preserve">
    <value>File create failed :"{0}"</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILE_TITLE" xml:space="preserve">
    <value>New Json File</value>
  </data>
  <data name="JE_RUN_NEW_LINE_M_1" xml:space="preserve">
    <value>"{0}" New line added.</value>
  </data>
  <data name="JE_RUN_NEW_LINE_M_2" xml:space="preserve">
    <value>New line need at least 1 column in a file.</value>
  </data>
  <data name="JE_RUN_REGENERATE_KEY_M_1" xml:space="preserve">
    <value>Regenerate keys in column "{0}", confirm? (will replace original value)</value>
  </data>
  <data name="JE_RUN_REGENERATE_KEY_M_2" xml:space="preserve">
    <value>Column "{0}" keys regenerated.</value>
  </data>
  <data name="JE_RUN_RENAME_COLUMN_M_1" xml:space="preserve">
    <value>Column "{0}" already exists.</value>
  </data>
  <data name="JE_RUN_RENAME_COLUMN_M_2" xml:space="preserve">
    <value>Column has renamed as "{0}".</value>
  </data>
  <data name="JE_RUN_RENAME_COLUMN_TITLE" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="JE_RUN_RENAME_DATABASE_M_1" xml:space="preserve">
    <value>Folder's title has rename to "{0}".</value>
  </data>
  <data name="JE_RUN_RENAME_JSON_FILE_M_1" xml:space="preserve">
    <value>File "{0}.json" exist.</value>
  </data>
  <data name="JE_RUN_RENAME_JSON_FILE_M_2" xml:space="preserve">
    <value>File has renamed as "{0}".</value>
  </data>
  <data name="JE_RUN_RESET_VALUE_M_1" xml:space="preserve">
    <value>Confirm to reset all value of column "{0}"?</value>
  </data>
  <data name="JE_RUN_RESET_VALUE_M_2" xml:space="preserve">
    <value>All value in column "{0}" is reset.</value>
  </data>
  <data name="JE_RUN_SAVE_AS_JSON_FILES_M_1" xml:space="preserve">
    <value>This is not a empty folder, Confirm to delete all files in the folder.</value>
  </data>
  <data name="JE_RUN_SAVE_FILES_CHECK" xml:space="preserve">
    <value>Folder "{0}" didn't save, save folder?</value>
  </data>
  <data name="JE_RUN_SAVE_JSON_FILES_M_1" xml:space="preserve">
    <value>Save cancel. File "{0}.json" is not valid.</value>
  </data>
  <data name="JE_RUN_SAVE_JSON_FILES_M_2" xml:space="preserve">
    <value>"{0}" All Files saved.</value>
  </data>
  <data name="JE_RUN_SCAN_CSV_FILES_M_1" xml:space="preserve">
    <value>There is no csv file in the target folder "{0}".</value>
  </data>
  <data name="JE_RUN_SCAN_CSV_FILES_M_2" xml:space="preserve">
    <value>{0} File(s) scan complete.</value>
  </data>
  <data name="JE_RUN_SCAN_JSON_FILES_M_1" xml:space="preserve">
    <value>Folder "{0}" already has a JFI file, confirm to continue scan target folder? (new JFI file will replace the old one when a save command has committed.)</value>
  </data>
  <data name="JE_RUN_SCAN_JSON_FILES_M_2" xml:space="preserve">
    <value>{0} File(s) scan complete.</value>
  </data>
  <data name="JE_RUN_SCAN_JSON_FILES_TITLE" xml:space="preserve">
    <value>Scan Json Folder</value>
  </data>
  <data name="JE_RUN_SORT_M_1" xml:space="preserve">
    <value>Confirm to sort by columns and method below(can't undo):{0}</value>
  </data>
  <data name="JE_RUN_SORT_M_2" xml:space="preserve">
    <value>{0} has sorted.</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_M_5" xml:space="preserve">
    <value>This file has {0} lines of data, confirm to update synchronously? (If type didn't match will change to an initial value)</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_M_6" xml:space="preserve">
    <value>Column "{0}" updated.</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_TITLE" xml:space="preserve">
    <value>Update Column</value>
  </data>
  <data name="JE_RUN_UPDATE_LINE_M_1" xml:space="preserve">
    <value>"{0}" Data updated.</value>
  </data>
  <data name="JE_TMI_ABOUT" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="JE_TMI_ADD_COLUMN" xml:space="preserve">
    <value>Add Column</value>
  </data>
  <data name="JE_TMI_ADD_ID_COLUMN" xml:space="preserve">
    <value>Add ID Column</value>
  </data>
  <data name="JE_TMI_CLEAR_SORT_INFO" xml:space="preserve">
    <value>Remove Sorting</value>
  </data>
  <data name="JE_TMI_CLOSE_ALL_FILES" xml:space="preserve">
    <value>Close Json Folder</value>
  </data>
  <data name="JE_TMI_CLOSE_JSON_FILE" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="JE_TMI_CLOSE_TAB" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="JE_TMI_COLLAPSE_ALL" xml:space="preserve">
    <value>Collapse All</value>
  </data>
  <data name="JE_TMI_COLUMN_MOVE_BOTTOM" xml:space="preserve">
    <value>Set To Bottom</value>
  </data>
  <data name="JE_TMI_COLUMN_MOVE_DOWN" xml:space="preserve">
    <value>Move Down</value>
  </data>
  <data name="JE_TMI_COLUMN_MOVE_TOP" xml:space="preserve">
    <value>Set To Top</value>
  </data>
  <data name="JE_TMI_COLUMN_MOVE_UP" xml:space="preserve">
    <value>Move Up</value>
  </data>
  <data name="JE_TMI_COLUMN_SHOW_ON_LIST" xml:space="preserve">
    <value>Show on List</value>
  </data>
  <data name="JE_TMI_DELETE_COLUMN" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="JE_TMI_DELETE_JSON_FILE" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="JE_TMI_DISPLAY_ALL_COLUMN" xml:space="preserve">
    <value>Show All Columns on List</value>
  </data>
  <data name="JE_TMI_EDIT_DATABASE_DESCRIPTION" xml:space="preserve">
    <value>Edit Description</value>
  </data>
  <data name="JE_TMI_EDIT_SORT_INFO" xml:space="preserve">
    <value>Sorting</value>
  </data>
  <data name="JE_TMI_EXIT" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="JE_TMI_EXPAND_ALL" xml:space="preserve">
    <value>Expand All</value>
  </data>
  <data name="JE_TMI_EXPORT" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="JE_TMI_EXPORT_FILE" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="JE_TMI_EXPORT_TO_CS" xml:space="preserve">
    <value>Export to C# Class</value>
  </data>
  <data name="JE_TMI_EXPORT_TO_CSV" xml:space="preserve">
    <value>Export to CSV Files</value>
  </data>
  <data name="JE_TMI_EXPORT_TO_CSV_FILE" xml:space="preserve">
    <value>Export to CSV</value>
  </data>
  <data name="JE_TMI_EXPORT_TO_CS_FILE" xml:space="preserve">
    <value>Export to C# Class Files</value>
  </data>
  <data name="JE_TMI_EXPORT_TO_LANG_FILES" xml:space="preserve">
    <value>Export to Language Files</value>
  </data>
  <data name="JE_TMI_EXPORT_TO_XML" xml:space="preserve">
    <value>Export to XML Files</value>
  </data>
  <data name="JE_TMI_EXPORT_TO_XML_FILE" xml:space="preserve">
    <value>Export to XML</value>
  </data>
  <data name="JE_TMI_FILE" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="JE_TMI_FUNCTION" xml:space="preserve">
    <value>Function</value>
  </data>
  <data name="JE_TMI_HELP" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="JE_TMI_LANGUAGES" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="JE_TMI_LOAD_JSON_FILES" xml:space="preserve">
    <value>Load Json Folder</value>
  </data>
  <data name="JE_TMI_NEW_JSON_FILE" xml:space="preserve">
    <value>New Json File</value>
  </data>
  <data name="JE_TMI_NEW_JSON_FILES" xml:space="preserve">
    <value>New Json Folder</value>
  </data>
  <data name="JE_TMI_OPEN_FOLDER" xml:space="preserve">
    <value>Open Folder in File Explorer</value>
  </data>
  <data name="JE_TMI_OPEN_JSON_FILE" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="JE_TMI_PRINT_LIST" xml:space="preserve">
    <value>Print List</value>
  </data>
  <data name="JE_TMI_REFRESH_FILES" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="JE_TMI_RENAME_COLUMN" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="JE_TMI_RENAME_DATABASE" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="JE_TMI_RENAME_JSON_FILE" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="JE_TMI_SAVE_AS_JSON_FILES" xml:space="preserve">
    <value>Save as ..  Json Folder</value>
  </data>
  <data name="JE_TMI_SAVE_JSON_FILES" xml:space="preserve">
    <value>Save Json Folder</value>
  </data>
  <data name="JE_TMI_SCAN" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="JE_TMI_SCAN_CSV_FILES" xml:space="preserve">
    <value>Scan CSV Folder</value>
  </data>
  <data name="JE_TMI_SCAN_JSON_FILES" xml:space="preserve">
    <value>Scan Json Folder</value>
  </data>
  <data name="JE_TMI_VIEW_JFI_FILE" xml:space="preserve">
    <value>Open JFI File in Notepad</value>
  </data>
  <data name="JE_TMI_VIEW_JSON_FILE" xml:space="preserve">
    <value>Open File in Notepad</value>
  </data>
  <data name="JE_VAL_CHOICE_VALUE_NOT_EXIST" xml:space="preserve">
    <value>Choiced value "{0}" is invalid.</value>
  </data>
  <data name="JE_VAL_COLUMN_AUTO_GENERATE_KEY_WITH_INAPPROPRIATE_TYPE" xml:space="preserve">
    <value>Auto-generated key column with inappropriate column type. (only string, number and guid type can auto generate)</value>
  </data>
  <data name="JE_VAL_COLUMN_AUTO_GENERATE_KEY_WITH_RESTRICT" xml:space="preserve">
    <value>Auto-generated key column has other rules. (min value, max value, max length, or regular expression)</value>
  </data>
  <data name="JE_VAL_COLUMN_CHOICE_TYPE_CHOICES_NOT_EXISTS" xml:space="preserve">
    <value>Choice type column without any choice.</value>
  </data>
  <data name="JE_VAL_COLUMN_FK_COLUMN_MISSING" xml:space="preserve">
    <value>Foreign key column is missing.</value>
  </data>
  <data name="JE_VAL_COLUMN_FK_COLUMN_NOT_EXIST" xml:space="preserve">
    <value>Foreign key column is not exist.</value>
  </data>
  <data name="JE_VAL_COLUMN_FK_COLUMN_TYPE_NOT_MATCH" xml:space="preserve">
    <value>The type of foreign key column is not match.</value>
  </data>
  <data name="JE_VAL_COLUMN_FK_TABLE_MISSING" xml:space="preserve">
    <value>Foreign key file is missing.</value>
  </data>
  <data name="JE_VAL_COLUMN_FK_TABLE_NOT_EXIST" xml:space="preserve">
    <value>Foreign key file is not exist.</value>
  </data>
  <data name="JE_VAL_COLUMN_ILLEGAL_NAME" xml:space="preserve">
    <value>Column name is illegal.</value>
  </data>
  <data name="JE_VAL_COLUMN_ILLEGAL_REGULAR_EXPRESSION" xml:space="preserve">
    <value>Regular Expression format error.</value>
  </data>
  <data name="JE_VAL_COLUMN_IS_KEY_AND_IS_NULL" xml:space="preserve">
    <value>Key column's value can't be Null.</value>
  </data>
  <data name="JE_VAL_COLUMN_MAX_LEGNTH_IS_NEGATIVE" xml:space="preserve">
    <value>Text maximum length is invalid, it should be 0(unlimited) or a positive integer.</value>
  </data>
  <data name="JE_VAL_COLUMN_MAX_VALUE_CAST_FAILED" xml:space="preserve">
    <value>"{0}" is not a correct max value.</value>
  </data>
  <data name="JE_VAL_COLUMN_MIN_VALUE_CAST_FAILED" xml:space="preserve">
    <value>"{0}" is not a correct min value.</value>
  </data>
  <data name="JE_VAL_COLUMN_MIN_VALUE_GREATER_THAN_MAX_VALUE" xml:space="preserve">
    <value>The min value "{0}" is greater than the max value"{1}".</value>
  </data>
  <data name="JE_VAL_COLUMN_NOT_NUMBER_OR_DATETIME_HAVE_MAX_VALUE" xml:space="preserve">
    <value>Non-number or Non-datetime column has a max value.</value>
  </data>
  <data name="JE_VAL_COLUMN_NOT_NUMBER_OR_DATETIME_HAVE_MIN_VALUE" xml:space="preserve">
    <value>Non-number or Non-datetime column has a min value.</value>
  </data>
  <data name="JE_VAL_COLUMN_NUMBER_OF_ROWS_IS_NEGATIVE_OR_TOO_BIG" xml:space="preserve">
    <value>Number of rows is negative or too big.</value>
  </data>
  <data name="JE_VAL_COLUMN_NUMBER_OR_DATETIME_HAS_REGULAR_EXPRESSION" xml:space="preserve">
    <value>Number or datetime type column has a regular expression.</value>
  </data>
  <data name="JE_VAL_DUPLICATE_KEY" xml:space="preserve">
    <value>Key value "{0}" duplicated.</value>
  </data>
  <data name="JE_VAL_FK_VALUE_NOT_FOUND" xml:space="preserve">
    <value>Foreign key value "{0}" not exist.</value>
  </data>
  <data name="JE_VAL_GREATER_THEN_MAX_VALUE" xml:space="preserve">
    <value>"{0}" is greater than the max value "{1}".</value>
  </data>
  <data name="JE_VAL_INVALID_CAST" xml:space="preserve">
    <value>"{0}" Invalid data.</value>
  </data>
  <data name="JE_VAL_JFI_FILE_INVALID_MESSAGE_PARTIAL" xml:space="preserve">
    <value>JFI File is invalid, File name: "{0}", Column name: "{1}", </value>
  </data>
  <data name="JE_VAL_LESS_THEN_MIN_VALUE" xml:space="preserve">
    <value>"{0}" is less than the min value "{1}".</value>
  </data>
  <data name="JE_VAL_NOT_NULLABLE" xml:space="preserve">
    <value>Value can't be Null.</value>
  </data>
  <data name="JE_VAL_REGEX_IS_NOT_MATCH" xml:space="preserve">
    <value>"{0}" Regular expression check failed.</value>
  </data>
  <data name="JE_VAL_SORT_DUPLICATE_COLUMN" xml:space="preserve">
    <value>Column Duplicated:{0}</value>
  </data>
  <data name="JE_VAL_TEXT_MAXIMUM_LENGTH_OVER" xml:space="preserve">
    <value>Text over maximum length: {0}.</value>
  </data>
  <data name="JE_VAL_VALUE_IS_NOT_UNIQUE" xml:space="preserve">
    <value>Value "{0}" exists.</value>
  </data>
  <data name="JSON_FILE_EDITOR_TITLE" xml:space="preserve">
    <value>JSON Files Editor</value>
  </data>
  <data name="JE_TMI_INSERT_FIRST" xml:space="preserve">
    <value>Insert Data from First Row</value>
  </data>
  <data name="JE_TT_NOW_FUNCTION_GUID_FUNCTION" xml:space="preserve">
    <value>Use {{NOW()}} represent current date &amp; time
Use {{NOW('T')}} represent current time
Use {{NOW('D')}} represent current date
Use {{COUNT()}} represent number of rows
Use {{GUID()}} represent new GUID</value>
  </data>
  <data name="JE_TMI_SETTING" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="JE_TMI_USE_ARINA_DATE" xml:space="preserve">
    <value>File Use Arina Date</value>
  </data>
</root>